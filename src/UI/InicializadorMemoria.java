package UI;

import com.sun.javafx.fxml.expression.BinaryExpression;
import logica.OS;

public class InicializadorMemoria extends javax.swing.JFrame {

    OS OS;
    
    public InicializadorMemoria() {
        this.setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iniciar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        paginaField = new javax.swing.JTextField();
        mpField = new javax.swing.JTextField();
        msField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        unitMarco = new javax.swing.JComboBox<>();
        unitMp = new javax.swing.JComboBox<>();
        unitMs = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iniciar.setText("Continuar");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });
        getContentPane().add(iniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, -1, -1));

        jLabel3.setText(" Tamaño de M. Principal");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 150, 20));

        jLabel9.setText("Tamaño de M. Secundaria");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 150, 20));

        jLabel10.setText("Tamaño de página/marco");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 150, 20));

        paginaField.setText("1");
        paginaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                paginaFieldKeyTyped(evt);
            }
        });
        getContentPane().add(paginaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 140, 30));

        mpField.setText("16");
        mpField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mpFieldKeyTyped(evt);
            }
        });
        getContentPane().add(mpField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 140, -1));

        msField.setText("1");
        msField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                msFieldKeyTyped(evt);
            }
        });
        getContentPane().add(msField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 140, -1));

        jLabel1.setText("Los números ingresados deben ser potencias de 2");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 310, 20));

        unitMarco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kb", "Mb" }));
        getContentPane().add(unitMarco, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        unitMp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kb", "Mb" }));
        getContentPane().add(unitMp, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, -1, -1));

        unitMs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mb", "Gb" }));
        getContentPane().add(unitMs, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isPow(double test){
        double test1 = test;
        while(true){
            if(test1 == 1){
                return true;
            }
            if(test1%2 != 0){ //No es potencia de 2
                return false;
            }
            test1 = test1 / 2;
        }
    }
    
    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        double tamMarco, tamMP, tamMS;
        boolean pasar = true;
        
        if(this.mpField.getText().length() > 0 && this.msField.getText().length() > 0 && this.paginaField.getText().length() > 0){
                //Validar tamMarco
            tamMarco = Integer.parseInt(this.paginaField.getText());
            pasar = this.isPow(tamMarco);
            if(tamMarco <= 0){
                System.out.println("Add JOptionPane de tamaño de marco negativo");
                return;
            }
            if(pasar){
                tamMP = Integer.parseInt(this.mpField.getText());
                pasar = this.isPow(tamMP);
                if(tamMP <= 0){
                    System.out.println("Add JOptionPane de tamaño de mp negativo");
                    return;
                }
                if(pasar){
                    
                    tamMS = Integer.parseInt(this.msField.getText());
                    pasar = this.isPow(tamMS);
                    
                    if(tamMS <= 0){
                        System.out.println("Add JOptionPane de tamaño de ms negativo");
                        return;
                    }
                    
                    if(pasar){
                        String aux = this.unitMs.getItemAt(this.unitMs.getSelectedIndex());
                        
                        if(aux.equals("Mb")){
                            tamMS = (tamMS*1024*1024); //Pasar de Mb a bytes
                        }else{
                            tamMS = (tamMS*1024*1024*1024); //Pasar de Gb a bytes
                        }
                        
                        aux = this.unitMp.getItemAt(this.unitMp.getSelectedIndex());
                        
                        if(aux.equals("Kb")){
                            tamMP = (tamMP*1024); //Pasar de Kb a bytes
                        }else{
                            tamMP = (tamMP*1024*1024); //Pasar de Mb a bytes
                        }
                        
                        if(tamMP > tamMS){
                            System.out.println("Add JOptionPane de memoria principal es más grande que secundaria");
                            return;
                        }
                        
                        aux = this.unitMarco.getItemAt(this.unitMarco.getSelectedIndex());
                        
                        if(aux.equals("Kb")){
                            tamMarco = (tamMarco*1024); //Pasar de Kb a bytes
                        }else{
                            tamMarco = (tamMarco*1024*1024); //Pasar de Mb a bytes
                        }
                        
                        if(tamMP/tamMarco < 16){
                            System.out.println("Add JOptionPane de tamaño de marco muy grande");
                            return;
                        }
                        
                        if(tamMP/tamMarco > 256){
                            System.out.println("Add JOptionPane de marco muy pequeño");
                            return;
                        }
                        
                        this.OS = new OS(tamMarco, tamMP, tamMS);
                        
                        InicializadorProcesos exe = new InicializadorProcesos();
                        this.setVisible(false);
                    }else{
                        System.out.println("Add JOptinoPane de tamaño de ms no es potencia de 2");
                    }
                }else{
                    System.out.println("Add JOptinoPane de tamaño de mp no es potencia de 2");
                }
            }else{
                System.out.println("Add JOptinoPane de tamaño de página no es potencia de 2");
            }
        }else{
            System.out.println("Add JOptinoPane de campos inválidos");
        }
        
    }//GEN-LAST:event_iniciarActionPerformed

    private void paginaFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paginaFieldKeyTyped
        char aux = evt.getKeyChar();
        if(Character.isLetter(aux)){
            evt.consume();
            System.out.println("Add JOption de presionaste un char");
            return;
        }
    }//GEN-LAST:event_paginaFieldKeyTyped

    private void mpFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mpFieldKeyTyped
        char aux = evt.getKeyChar();
        if(Character.isLetter(aux)){
            evt.consume();
            System.out.println("Add JOption de presionaste un char");
            return;
        }
    }//GEN-LAST:event_mpFieldKeyTyped

    private void msFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msFieldKeyTyped
        char aux = evt.getKeyChar();
        if(Character.isLetter(aux)){
            evt.consume();
            System.out.println("Add JOption de presionaste un char");
            return;
        }
    }//GEN-LAST:event_msFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicializadorMemoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicializadorMemoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicializadorMemoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicializadorMemoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicializadorMemoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton iniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mpField;
    private javax.swing.JTextField msField;
    private javax.swing.JTextField paginaField;
    private javax.swing.JComboBox<String> unitMarco;
    private javax.swing.JComboBox<String> unitMp;
    private javax.swing.JComboBox<String> unitMs;
    // End of variables declaration//GEN-END:variables
}
